#libraries
library(tidyverse)
library(nycflights13)

#Mutating Joins

#Left Join - Adds new data to data on the left
flights2 <- flights %>% 
              select(year:day, origin, dest, tailnum, carrier)

flights2 %>% select(-origin, -dest) %>% left_join(airlines, by = "carrier")

#Arbitrary examples
x <- tribble(
  ~key, ~value_x,
    1,   "X1",
    2,   "X2",
    3,   "X3"
)

y <- tribble(
  ~key, ~value_y,
  1,   "Y1",
  2,   "Y2",
  4,   "Y3"
)

#Inner Join - Joins existing values
x %>% inner_join(y, by = "key")

#left join - takes values from the left hand side
x %>% left_join(y, by = "key")

#Right Join - Takes values from the right hand side
x %>% right_join(y, by = "key")

#Full Join - Takes values from both sides
x %>% full_join(y, by = "key")

#Duplicate Keys Examples

#Example when one table has duplicate keys
x <- tribble(
  ~key, ~value_x,
  1,   "X1",
  2,   "X2",
  2,   "X3",
  1,   "x4"
)

y <- tribble(
  ~key, ~value_y,
  1,   "Y1",
  2,   "Y2",
)

left_join(x,y, by = "key")


#Example when both tables have duplicate keys - usually a mistake
x <- tribble(
  ~key, ~value_x,
  1,   "X1",
  2,   "X2",
  2,   "X3",
  3,   "x4"
)

y <- tribble(
  ~key, ~value_y,
  1,   "Y1",
  2,   "Y2",
  2,   "Y3",
  3,   "Y4"
)

left_join(x,y, by = "key")

#FIltering Joins
top_dest <- flights %>%
            count(dest, sort = TRUE) %>%
            head(10)

flights %>% semi_join(top_dest, by = "dest")

